import { OnDestroy, OnInit, OnChanges, EventEmitter, ElementRef, SimpleChanges } from '@angular/core';
import { Colors } from './colors.interface';
import * as ɵngcc0 from '@angular/core';
export declare class BaseChartDirective implements OnDestroy, OnChanges, OnInit, Colors {
    element: ElementRef;
    static defaultColors: Array<number[]>;
    data: number[] | any[];
    datasets: any[];
    labels: Array<any>;
    options: any;
    chartType: string;
    colors: Array<any>;
    legend: boolean;
    chartClick: EventEmitter<any>;
    chartHover: EventEmitter<any>;
    ctx: any;
    chart: any;
    cvs: any;
    initFlag: boolean;
    isBrowser: any;
    constructor(element: ElementRef, platformId: string);
    ngOnInit(): any;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): any;
    getChartBuilder(ctx: any): any;
    getPointDataAtEvent(event: any): any;
    private updateChartData;
    private getDatasets;
    private refresh;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<BaseChartDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<BaseChartDirective, "canvas[mdbChart]", ["mdb-base-chart"], {
    "labels": "labels";
    "options": "options";
    "legend": "legend";
    "data": "data";
    "datasets": "datasets";
    "chartType": "chartType";
    "colors": "colors";
}, {
    "chartClick": "chartClick";
    "chartHover": "chartHover";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhcnQuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbImNoYXJ0LmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMEJBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT25EZXN0cm95LCBPbkluaXQsIE9uQ2hhbmdlcywgRXZlbnRFbWl0dGVyLCBFbGVtZW50UmVmLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb2xvcnMgfSBmcm9tICcuL2NvbG9ycy5pbnRlcmZhY2UnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQmFzZUNoYXJ0RGlyZWN0aXZlIGltcGxlbWVudHMgT25EZXN0cm95LCBPbkNoYW5nZXMsIE9uSW5pdCwgQ29sb3JzIHtcbiAgICBlbGVtZW50OiBFbGVtZW50UmVmO1xuICAgIHN0YXRpYyBkZWZhdWx0Q29sb3JzOiBBcnJheTxudW1iZXJbXT47XG4gICAgZGF0YTogbnVtYmVyW10gfCBhbnlbXTtcbiAgICBkYXRhc2V0czogYW55W107XG4gICAgbGFiZWxzOiBBcnJheTxhbnk+O1xuICAgIG9wdGlvbnM6IGFueTtcbiAgICBjaGFydFR5cGU6IHN0cmluZztcbiAgICBjb2xvcnM6IEFycmF5PGFueT47XG4gICAgbGVnZW5kOiBib29sZWFuO1xuICAgIGNoYXJ0Q2xpY2s6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGNoYXJ0SG92ZXI6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGN0eDogYW55O1xuICAgIGNoYXJ0OiBhbnk7XG4gICAgY3ZzOiBhbnk7XG4gICAgaW5pdEZsYWc6IGJvb2xlYW47XG4gICAgaXNCcm93c2VyOiBhbnk7XG4gICAgY29uc3RydWN0b3IoZWxlbWVudDogRWxlbWVudFJlZiwgcGxhdGZvcm1JZDogc3RyaW5nKTtcbiAgICBuZ09uSW5pdCgpOiBhbnk7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogYW55O1xuICAgIGdldENoYXJ0QnVpbGRlcihjdHg6IGFueSk6IGFueTtcbiAgICBnZXRQb2ludERhdGFBdEV2ZW50KGV2ZW50OiBhbnkpOiBhbnk7XG4gICAgcHJpdmF0ZSB1cGRhdGVDaGFydERhdGE7XG4gICAgcHJpdmF0ZSBnZXREYXRhc2V0cztcbiAgICBwcml2YXRlIHJlZnJlc2g7XG59XG4iXX0=