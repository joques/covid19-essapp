import { AfterViewInit, ElementRef, OnInit, Renderer2 } from '@angular/core';
import { Observable } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
export declare class MdbTableDirective implements OnInit, AfterViewInit {
    private el;
    private renderer;
    striped: boolean;
    bordered: boolean;
    borderless: boolean;
    hover: boolean;
    small: boolean;
    responsive: boolean;
    stickyHeader: boolean;
    stickyHeaderBgColor: string;
    stickyHeaderTextColor: string;
    constructor(el: ElementRef, renderer: Renderer2);
    private _dataSource;
    private _dataSourceChanged;
    addRow(newRow: any): void;
    addRowAfter(index: number, row: any): void;
    removeRow(index: number): void;
    rowRemoved(): Observable<boolean>;
    removeLastRow(): void;
    getDataSource(): any;
    setDataSource(data: any): void;
    dataSourceChange(): Observable<any>;
    filterLocalDataBy(searchKey: string): any;
    filterLocalDataByFields(searchKey: string, keys: string[]): any;
    filterLocalDataByMultipleFields(searchKey: string, keys?: string[]): any;
    searchLocalDataBy(searchKey: string): any;
    searchLocalDataByFields(searchKey: string, keys: string[]): any;
    searchLocalDataByMultipleFields(searchKey: string, keys?: string[]): any;
    searchDataObservable(searchKey: string): Observable<any>;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MdbTableDirective>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<MdbTableDirective, "[mdbTable]", ["mdbTable"], {
    "stickyHeader": "stickyHeader";
    "stickyHeaderBgColor": "stickyHeaderBgColor";
    "stickyHeaderTextColor": "stickyHeaderTextColor";
    "striped": "striped";
    "bordered": "bordered";
    "borderless": "borderless";
    "hover": "hover";
    "small": "small";
    "responsive": "responsive";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWRiLXRhYmxlLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJtZGItdGFibGUuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZnRlclZpZXdJbml0LCBFbGVtZW50UmVmLCBPbkluaXQsIFJlbmRlcmVyMiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTWRiVGFibGVEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkluaXQsIEFmdGVyVmlld0luaXQge1xuICAgIHByaXZhdGUgZWw7XG4gICAgcHJpdmF0ZSByZW5kZXJlcjtcbiAgICBzdHJpcGVkOiBib29sZWFuO1xuICAgIGJvcmRlcmVkOiBib29sZWFuO1xuICAgIGJvcmRlcmxlc3M6IGJvb2xlYW47XG4gICAgaG92ZXI6IGJvb2xlYW47XG4gICAgc21hbGw6IGJvb2xlYW47XG4gICAgcmVzcG9uc2l2ZTogYm9vbGVhbjtcbiAgICBzdGlja3lIZWFkZXI6IGJvb2xlYW47XG4gICAgc3RpY2t5SGVhZGVyQmdDb2xvcjogc3RyaW5nO1xuICAgIHN0aWNreUhlYWRlclRleHRDb2xvcjogc3RyaW5nO1xuICAgIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmLCByZW5kZXJlcjogUmVuZGVyZXIyKTtcbiAgICBwcml2YXRlIF9kYXRhU291cmNlO1xuICAgIHByaXZhdGUgX2RhdGFTb3VyY2VDaGFuZ2VkO1xuICAgIGFkZFJvdyhuZXdSb3c6IGFueSk6IHZvaWQ7XG4gICAgYWRkUm93QWZ0ZXIoaW5kZXg6IG51bWJlciwgcm93OiBhbnkpOiB2b2lkO1xuICAgIHJlbW92ZVJvdyhpbmRleDogbnVtYmVyKTogdm9pZDtcbiAgICByb3dSZW1vdmVkKCk6IE9ic2VydmFibGU8Ym9vbGVhbj47XG4gICAgcmVtb3ZlTGFzdFJvdygpOiB2b2lkO1xuICAgIGdldERhdGFTb3VyY2UoKTogYW55O1xuICAgIHNldERhdGFTb3VyY2UoZGF0YTogYW55KTogdm9pZDtcbiAgICBkYXRhU291cmNlQ2hhbmdlKCk6IE9ic2VydmFibGU8YW55PjtcbiAgICBmaWx0ZXJMb2NhbERhdGFCeShzZWFyY2hLZXk6IHN0cmluZyk6IGFueTtcbiAgICBmaWx0ZXJMb2NhbERhdGFCeUZpZWxkcyhzZWFyY2hLZXk6IHN0cmluZywga2V5czogc3RyaW5nW10pOiBhbnk7XG4gICAgZmlsdGVyTG9jYWxEYXRhQnlNdWx0aXBsZUZpZWxkcyhzZWFyY2hLZXk6IHN0cmluZywga2V5cz86IHN0cmluZ1tdKTogYW55O1xuICAgIHNlYXJjaExvY2FsRGF0YUJ5KHNlYXJjaEtleTogc3RyaW5nKTogYW55O1xuICAgIHNlYXJjaExvY2FsRGF0YUJ5RmllbGRzKHNlYXJjaEtleTogc3RyaW5nLCBrZXlzOiBzdHJpbmdbXSk6IGFueTtcbiAgICBzZWFyY2hMb2NhbERhdGFCeU11bHRpcGxlRmllbGRzKHNlYXJjaEtleTogc3RyaW5nLCBrZXlzPzogc3RyaW5nW10pOiBhbnk7XG4gICAgc2VhcmNoRGF0YU9ic2VydmFibGUoc2VhcmNoS2V5OiBzdHJpbmcpOiBPYnNlcnZhYmxlPGFueT47XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbn1cbiJdfQ==