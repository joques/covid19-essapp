import { OnInit, EventEmitter, ChangeDetectorRef, OnChanges, SimpleChanges, AfterViewInit, OnDestroy } from '@angular/core';
import { Observable, Subject } from 'rxjs';
import { MdbTableDirective } from '../directives/mdb-table.directive';
import * as ɵngcc0 from '@angular/core';
export interface MdbPaginationIndex {
    first: number;
    last: number;
}
export declare class MdbTablePaginationComponent implements OnInit, OnChanges, AfterViewInit, OnDestroy {
    private cdRef;
    tableEl: MdbTableDirective;
    searchPagination: boolean;
    searchDataSource: any;
    ofKeyword: string;
    dashKeyword: string;
    paginationAlign: string;
    hideDescription: boolean;
    private _destroy$;
    maxVisibleItems: number;
    firstItemIndex: number;
    lastItemIndex: number;
    lastVisibleItemIndex: number;
    activePageNumber: number;
    allItemsLength: number;
    nextShouldBeDisabled: boolean;
    previousShouldBeDisabled: boolean;
    searchText: string;
    pagination: Subject<MdbPaginationIndex>;
    nextPageClick: EventEmitter<MdbPaginationIndex>;
    previousPageClick: EventEmitter<MdbPaginationIndex>;
    firstPageClick: EventEmitter<MdbPaginationIndex>;
    lastPageClick: EventEmitter<MdbPaginationIndex>;
    constructor(cdRef: ChangeDetectorRef);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    setMaxVisibleItemsNumberTo(value: number): void;
    searchTextObs(): Observable<any>;
    disableNextButton(data: any): void;
    calculateFirstItemIndex(): void;
    calculateLastItemIndex(): void;
    paginationChange(): Observable<any>;
    calculateHowManyPagesShouldBe(): number;
    previousPage(): void;
    nextPage(): void;
    firstPage(): void;
    lastPage(): void;
    nextPageObservable(): Observable<any>;
    previousPageObservable(): Observable<any>;
    checkIfNextShouldBeDisabled(): boolean;
    checkIfPreviousShouldBeDisabled(): boolean;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MdbTablePaginationComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<MdbTablePaginationComponent, "mdb-table-pagination", never, {
    "searchPagination": "searchPagination";
    "searchDataSource": "searchDataSource";
    "ofKeyword": "ofKeyword";
    "dashKeyword": "dashKeyword";
    "paginationAlign": "paginationAlign";
    "hideDescription": "hideDescription";
    "tableEl": "tableEl";
}, {
    "nextPageClick": "nextPageClick";
    "previousPageClick": "previousPageClick";
    "firstPageClick": "firstPageClick";
    "lastPageClick": "lastPageClick";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWRiLXRhYmxlLXBhZ2luYXRpb24uY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbIm1kYi10YWJsZS1wYWdpbmF0aW9uLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBR0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWdEQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9uSW5pdCwgRXZlbnRFbWl0dGVyLCBDaGFuZ2VEZXRlY3RvclJlZiwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzLCBBZnRlclZpZXdJbml0LCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUsIFN1YmplY3QgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IE1kYlRhYmxlRGlyZWN0aXZlIH0gZnJvbSAnLi4vZGlyZWN0aXZlcy9tZGItdGFibGUuZGlyZWN0aXZlJztcbmV4cG9ydCBpbnRlcmZhY2UgTWRiUGFnaW5hdGlvbkluZGV4IHtcbiAgICBmaXJzdDogbnVtYmVyO1xuICAgIGxhc3Q6IG51bWJlcjtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE1kYlRhYmxlUGFnaW5hdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzLCBBZnRlclZpZXdJbml0LCBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgY2RSZWY7XG4gICAgdGFibGVFbDogTWRiVGFibGVEaXJlY3RpdmU7XG4gICAgc2VhcmNoUGFnaW5hdGlvbjogYm9vbGVhbjtcbiAgICBzZWFyY2hEYXRhU291cmNlOiBhbnk7XG4gICAgb2ZLZXl3b3JkOiBzdHJpbmc7XG4gICAgZGFzaEtleXdvcmQ6IHN0cmluZztcbiAgICBwYWdpbmF0aW9uQWxpZ246IHN0cmluZztcbiAgICBoaWRlRGVzY3JpcHRpb246IGJvb2xlYW47XG4gICAgcHJpdmF0ZSBfZGVzdHJveSQ7XG4gICAgbWF4VmlzaWJsZUl0ZW1zOiBudW1iZXI7XG4gICAgZmlyc3RJdGVtSW5kZXg6IG51bWJlcjtcbiAgICBsYXN0SXRlbUluZGV4OiBudW1iZXI7XG4gICAgbGFzdFZpc2libGVJdGVtSW5kZXg6IG51bWJlcjtcbiAgICBhY3RpdmVQYWdlTnVtYmVyOiBudW1iZXI7XG4gICAgYWxsSXRlbXNMZW5ndGg6IG51bWJlcjtcbiAgICBuZXh0U2hvdWxkQmVEaXNhYmxlZDogYm9vbGVhbjtcbiAgICBwcmV2aW91c1Nob3VsZEJlRGlzYWJsZWQ6IGJvb2xlYW47XG4gICAgc2VhcmNoVGV4dDogc3RyaW5nO1xuICAgIHBhZ2luYXRpb246IFN1YmplY3Q8TWRiUGFnaW5hdGlvbkluZGV4PjtcbiAgICBuZXh0UGFnZUNsaWNrOiBFdmVudEVtaXR0ZXI8TWRiUGFnaW5hdGlvbkluZGV4PjtcbiAgICBwcmV2aW91c1BhZ2VDbGljazogRXZlbnRFbWl0dGVyPE1kYlBhZ2luYXRpb25JbmRleD47XG4gICAgZmlyc3RQYWdlQ2xpY2s6IEV2ZW50RW1pdHRlcjxNZGJQYWdpbmF0aW9uSW5kZXg+O1xuICAgIGxhc3RQYWdlQ2xpY2s6IEV2ZW50RW1pdHRlcjxNZGJQYWdpbmF0aW9uSW5kZXg+O1xuICAgIGNvbnN0cnVjdG9yKGNkUmVmOiBDaGFuZ2VEZXRlY3RvclJlZik7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICBzZXRNYXhWaXNpYmxlSXRlbXNOdW1iZXJUbyh2YWx1ZTogbnVtYmVyKTogdm9pZDtcbiAgICBzZWFyY2hUZXh0T2JzKCk6IE9ic2VydmFibGU8YW55PjtcbiAgICBkaXNhYmxlTmV4dEJ1dHRvbihkYXRhOiBhbnkpOiB2b2lkO1xuICAgIGNhbGN1bGF0ZUZpcnN0SXRlbUluZGV4KCk6IHZvaWQ7XG4gICAgY2FsY3VsYXRlTGFzdEl0ZW1JbmRleCgpOiB2b2lkO1xuICAgIHBhZ2luYXRpb25DaGFuZ2UoKTogT2JzZXJ2YWJsZTxhbnk+O1xuICAgIGNhbGN1bGF0ZUhvd01hbnlQYWdlc1Nob3VsZEJlKCk6IG51bWJlcjtcbiAgICBwcmV2aW91c1BhZ2UoKTogdm9pZDtcbiAgICBuZXh0UGFnZSgpOiB2b2lkO1xuICAgIGZpcnN0UGFnZSgpOiB2b2lkO1xuICAgIGxhc3RQYWdlKCk6IHZvaWQ7XG4gICAgbmV4dFBhZ2VPYnNlcnZhYmxlKCk6IE9ic2VydmFibGU8YW55PjtcbiAgICBwcmV2aW91c1BhZ2VPYnNlcnZhYmxlKCk6IE9ic2VydmFibGU8YW55PjtcbiAgICBjaGVja0lmTmV4dFNob3VsZEJlRGlzYWJsZWQoKTogYm9vbGVhbjtcbiAgICBjaGVja0lmUHJldmlvdXNTaG91bGRCZURpc2FibGVkKCk6IGJvb2xlYW47XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbn1cbiJdfQ==