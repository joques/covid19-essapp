import { EventEmitter, OnChanges, OnInit, SimpleChanges, ChangeDetectorRef } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare const CHECKBOX_VALUE_ACCESSOR: any;
export declare class MdbCheckboxChange {
    element: CheckboxComponent;
    checked: boolean;
}
export declare class CheckboxComponent implements OnInit, OnChanges {
    private _cdRef;
    inputEl: any;
    private defaultId;
    class: string;
    id: string;
    required: boolean;
    name: string;
    value: string;
    checked: boolean;
    filledIn: boolean;
    indeterminate: boolean;
    disabled: boolean;
    rounded: boolean;
    checkboxPosition: string;
    default: boolean;
    inline: boolean;
    tabIndex: number;
    change: EventEmitter<MdbCheckboxChange>;
    private checkboxClicked;
    constructor(_cdRef: ChangeDetectorRef);
    onLabelClick(event: any): void;
    onDocumentClick(): void;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    get changeEvent(): MdbCheckboxChange;
    toggle(): void;
    onCheckboxClick(event: any): void;
    onCheckboxChange(event: any): void;
    onBlur(): void;
    onChange: (_: any) => void;
    onTouched: () => void;
    writeValue(value: any): void;
    registerOnChange(fn: (_: any) => void): void;
    registerOnTouched(fn: () => void): void;
    setDisabledState(isDisabled: boolean): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CheckboxComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<CheckboxComponent, "mdb-checkbox", never, {
    "id": "id";
    "checked": "checked";
    "filledIn": "filledIn";
    "indeterminate": "indeterminate";
    "rounded": "rounded";
    "checkboxPosition": "checkboxPosition";
    "default": "default";
    "inline": "inline";
    "value": "value";
    "disabled": "disabled";
    "class": "class";
    "required": "required";
    "name": "name";
    "tabIndex": "tabIndex";
}, {
    "change": "change";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tib3guY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImNoZWNrYm94LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF5Q0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIE9uQ2hhbmdlcywgT25Jbml0LCBTaW1wbGVDaGFuZ2VzLCBDaGFuZ2VEZXRlY3RvclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgQ0hFQ0tCT1hfVkFMVUVfQUNDRVNTT1I6IGFueTtcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE1kYkNoZWNrYm94Q2hhbmdlIHtcbiAgICBlbGVtZW50OiBDaGVja2JveENvbXBvbmVudDtcbiAgICBjaGVja2VkOiBib29sZWFuO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ2hlY2tib3hDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XG4gICAgcHJpdmF0ZSBfY2RSZWY7XG4gICAgaW5wdXRFbDogYW55O1xuICAgIHByaXZhdGUgZGVmYXVsdElkO1xuICAgIGNsYXNzOiBzdHJpbmc7XG4gICAgaWQ6IHN0cmluZztcbiAgICByZXF1aXJlZDogYm9vbGVhbjtcbiAgICBuYW1lOiBzdHJpbmc7XG4gICAgdmFsdWU6IHN0cmluZztcbiAgICBjaGVja2VkOiBib29sZWFuO1xuICAgIGZpbGxlZEluOiBib29sZWFuO1xuICAgIGluZGV0ZXJtaW5hdGU6IGJvb2xlYW47XG4gICAgZGlzYWJsZWQ6IGJvb2xlYW47XG4gICAgcm91bmRlZDogYm9vbGVhbjtcbiAgICBjaGVja2JveFBvc2l0aW9uOiBzdHJpbmc7XG4gICAgZGVmYXVsdDogYm9vbGVhbjtcbiAgICBpbmxpbmU6IGJvb2xlYW47XG4gICAgdGFiSW5kZXg6IG51bWJlcjtcbiAgICBjaGFuZ2U6IEV2ZW50RW1pdHRlcjxNZGJDaGVja2JveENoYW5nZT47XG4gICAgcHJpdmF0ZSBjaGVja2JveENsaWNrZWQ7XG4gICAgY29uc3RydWN0b3IoX2NkUmVmOiBDaGFuZ2VEZXRlY3RvclJlZik7XG4gICAgb25MYWJlbENsaWNrKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIG9uRG9jdW1lbnRDbGljaygpOiB2b2lkO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgZ2V0IGNoYW5nZUV2ZW50KCk6IE1kYkNoZWNrYm94Q2hhbmdlO1xuICAgIHRvZ2dsZSgpOiB2b2lkO1xuICAgIG9uQ2hlY2tib3hDbGljayhldmVudDogYW55KTogdm9pZDtcbiAgICBvbkNoZWNrYm94Q2hhbmdlKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIG9uQmx1cigpOiB2b2lkO1xuICAgIG9uQ2hhbmdlOiAoXzogYW55KSA9PiB2b2lkO1xuICAgIG9uVG91Y2hlZDogKCkgPT4gdm9pZDtcbiAgICB3cml0ZVZhbHVlKHZhbHVlOiBhbnkpOiB2b2lkO1xuICAgIHJlZ2lzdGVyT25DaGFuZ2UoZm46IChfOiBhbnkpID0+IHZvaWQpOiB2b2lkO1xuICAgIHJlZ2lzdGVyT25Ub3VjaGVkKGZuOiAoKSA9PiB2b2lkKTogdm9pZDtcbiAgICBzZXREaXNhYmxlZFN0YXRlKGlzRGlzYWJsZWQ6IGJvb2xlYW4pOiB2b2lkO1xufVxuIl19